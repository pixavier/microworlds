<blocks app="Snap! 9.0, https://snap.berkeley.edu" version="2"><block-definition s="rectangle %&apos;x&apos; %&apos;y&apos; %&apos;width&apos; %&apos;height&apos; color %&apos;R&apos; %&apos;G&apos; %&apos;B&apos;" type="command" category="pen"><comment x="0" y="0" w="353" collapsed="false">rectangle(x, y, width, height, R, G, B)&#xD;&#xD;&#xD;&#xD;&#xD;</comment><header></header><code></code><translations></translations><inputs><input type="%s">0</input><input type="%s">0</input><input type="%s">100</input><input type="%s">150</input><input type="%s">250</input><input type="%s">250</input><input type="%s">250</input></inputs><script><block s="doRun"><block s="reportJSFunction"><list><l>x</l><l>y</l><l>width</l><l>height</l><l>R</l><l>G</l><l>B</l></list><l>stage = this.parentThatIsA(StageMorph);&#xD;let ctx = stage.penTrails().getContext(&apos;2d&apos;);&#xD;let decColor = Math.pow(2,16)*parseInt(R)+Math.pow(2,8)*parseInt(G)+parseInt(B);&#xD;let hexColor = decColor.toString(16);&#xD;let lpadHexColor = ("000000" + hexColor).slice(-6)&#xD;ctx.fillStyle=&apos;#&apos;+lpadHexColor;&#xD;let dx = ctx.canvas.width/2;&#xD;let dy = ctx.canvas.height/2;&#xD;ctx.fillRect(parseInt(x)+dx, -parseInt(y)+dy, width, -height);&#xD;stage.changed();&#xD;</l></block><list><block var="x"/><block var="y"/><block var="width"/><block var="height"/><block var="R"/><block var="G"/><block var="B"/></list></block></script></block-definition><block-definition s="text %&apos;x&apos; %&apos;y&apos; value %&apos;text&apos; color %&apos;R&apos; %&apos;G&apos; %&apos;B&apos; font %&apos;font&apos;" type="command" category="pen"><comment x="0" y="0" w="180" collapsed="false">text(x, y, text, R, G, B, font)&#xD;&#xD;font: &lt;pixels&gt;px font-family&#xD;</comment><header></header><code></code><translations></translations><inputs><input type="%s">0</input><input type="%s">0</input><input type="%s">Hi</input><input type="%s">10</input><input type="%s">10</input><input type="%s">10</input><input type="%s">50px arial</input></inputs><script><block s="doRun"><block s="reportJSFunction"><list><l>x</l><l>y</l><l>text</l><l>R</l><l>G</l><l>B</l><l>font</l></list><l>let stage = this.parentThatIsA(StageMorph);&#xD;let ctx = stage.penTrails().getContext(&apos;2d&apos;);&#xD;let decColor = Math.pow(2,16)*parseInt(R)+Math.pow(2,8)*parseInt(G)+parseInt(B);&#xD;let hexColor = decColor.toString(16);&#xD;let lpadHexColor = ("000000" + hexColor).slice(-6)&#xD;ctx.fillStyle=&apos;#&apos;+lpadHexColor;&#xD;ctx.font = font;&#xD;ctx.fillStyle=&apos;#&apos;+lpadHexColor;&#xD;let dx = ctx.canvas.width/2;&#xD;let dy = ctx.canvas.height/2;&#xD;ctx.fillText(text, parseInt(x)+dx+1, -parseInt(y)+dy-1);&#xD;stage.changed();&#xD;</l></block><list><block var="x"/><block var="y"/><block var="text"/><block var="R"/><block var="G"/><block var="B"/><block var="font"/></list></block></script></block-definition><block-definition s="circle %&apos;x&apos; %&apos;y&apos; %&apos;radius&apos; color %&apos;R&apos; %&apos;G&apos; %&apos;B&apos;" type="command" category="pen"><comment x="0" y="0" w="254" collapsed="false">circle(x, y, radius, R, G, B)</comment><header></header><code></code><translations></translations><inputs><input type="%s">0</input><input type="%s">0</input><input type="%s">50</input><input type="%s">250</input><input type="%s">250</input><input type="%s">250</input></inputs><script><block s="doRun"><block s="reportJSFunction"><list><l>x</l><l>y</l><l>radius</l><l>R</l><l>G</l><l>B</l></list><l>let stage = this.parentThatIsA(StageMorph);&#xD;let ctx = stage.penTrails().getContext(&apos;2d&apos;);&#xD;let decColor = Math.pow(2,16)*parseInt(R)+Math.pow(2,8)*parseInt(G)+parseInt(B);&#xD;let hexColor = decColor.toString(16);&#xD;let lpadHexColor = ("000000" + hexColor).slice(-6)&#xD;ctx.beginPath();&#xD;let dx = ctx.canvas.width/2;&#xD;let dy = ctx.canvas.height/2;&#xD;ctx.arc(parseInt(x)+dx, -parseInt(y)+dy, radius, 0, 2*Math.PI);&#xD;ctx.fillStyle=&apos;#&apos;+lpadHexColor;&#xD;ctx.fill();&#xD;ctx.strokeStyle=&apos;#&apos;+lpadHexColor;&#xD;ctx.stroke();&#xD;stage.changed();&#xD;</l></block><list><block var="x"/><block var="y"/><block var="radius"/><block var="R"/><block var="G"/><block var="B"/></list></block></script></block-definition></blocks>